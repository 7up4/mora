= nested_form_for book, remote: true, authenticity_token: true, validate: true do |f|
  %p
    = link_to "Change a title", "#", class: "hide_field", id: "title"
  .field.hidden#title
    = f.label :title
    = f.text_field :title
  %p
    = link_to "Change an annotation", "#", class: "hide_field", id: "annotation"
  .field.hidden#annotation
    = f.label :annotation
    = f.text_area :annotation
  %p
    = link_to "Change a language", "#", class: "hide_field", id: "language"
  .field.hidden#language
    = f.label :language
    = f.select :language, ApplicationRecord::LANGUAGES, include_blank: true
  %p
    = link_to "Change a cover", "#", class: "hide_field", id: "cover"
  .field.hidden#cover
    = f.label :cover
    = book.cover_url.to_s if book.cover?
    = f.file_field :cover
    = f.hidden_field :cover_cache
  %p
    = link_to "Change a date of publication", "#", class: "hide_field", id: "date_of_publication"
  .field.hidden#date_of_publication
    = f.label :date_of_publication
    = f.text_field :date_of_publication, class: 'datepicker'
  - if @book.genres.exists?
    .field#genres
    = f.label :genres
    = @book.genres.collect{|g| g.genre_name}.join(', ')
  - if action_name != 'edit'
    .field#book_file
      = f.label :book_file
      = book.book_file_url.to_s if book.book_file?
      = f.file_field :book_file
      = f.hidden_field :book_file_cache
  .field#genres
    = f.label :genres
    = f.select :genre_ids, Genre.all.collect{|g| [g.genre_name, g.id]}, {}, multiple: true
  - if @book.authors.exists?
    .field#authors
    = f.label :authors
    = @book.authors.collect{|a| [a.first_name+' '+a.last_name]}.join(', ')
  - if !Author.all.empty?
    .field#authors
      = f.label :authors
      = f.select :author_ids, Author.all.collect{|a| [a.first_name+' '+a.last_name, a.id]}, {}, multiple: true
  - if @book.publishers.exists?
    .field#publishers
    = f.label :publishers
    = @book.publishers.collect{|g| g.publisher_name}.join(', ')
  - if !Publisher.all.empty?
    .field#publishers
      = f.label :publishers
      = f.select :publisher_ids, Publisher.all.collect{|p| [p.publisher_name, p.id]}, {}, multiple: true
  - if action_name != 'edit'
    = render 'author_fields', book: f
    = render 'publisher_fields', book: f
  .actions
    = f.submit
